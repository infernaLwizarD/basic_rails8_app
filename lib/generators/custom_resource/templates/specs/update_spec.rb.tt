require 'rails_helper'

RSpec.shared_examples 'edit_<%= resource_name %>' do
  it 'успешно редактирует' do
    open_from_table(table_id: '<%= resource_name_plural %>-table', text: edited_<%= resource_name %>.label)

    click_on 'Редактировать'

    new_label = 'Обновлённое наименование'
    fill_in 'Наименование', with: new_label

    click_on 'Сохранить'

    expect(page).to have_content '<%= update_success_message %>'
    expect(page).to have_content new_label
  end

  it 'получает сообщение об ошибке не заполнив обязательных полей' do
    open_from_table(table_id: '<%= resource_name_plural %>-table', text: edited_<%= resource_name %>.label)

    click_on 'Редактировать'

    fill_in 'Наименование', with: ''

    click_on 'Сохранить'

    expect(page).to have_content 'не может быть пустым'
  end
end

RSpec.describe 'Редактирование <%= resource_label_genitive %>', js: true, type: :system do
  before do
    logged_as(user)
    visit root_path
  end

  context 'Администратор' do
    let(:user) { create(:user, :admin) }

    let_it_be(:some_<%= resource_name %>) { create(:<%= resource_name %>) }

    before do
      open_menu_links('Справочники', '<%= resource_label_plural %>')
    end

    context 'редактирование <%= resource_label_genitive %>' do
      let(:edited_<%= resource_name %>) { some_<%= resource_name %> }

      it_behaves_like 'edit_<%= resource_name %>'
    end
  end

  context 'Обычный пользователь' do
    let(:user) { create(:user) }

    let_it_be(:some_<%= resource_name %>) { create(:<%= resource_name %>) }

    it 'не видит пункт меню "Справочники"' do
      within('.sidebar-menu') do
        expect(page).to have_no_content('Справочники')
      end
    end

    it 'перенаправляется на главную с сообщением об ошибке при попытке доступа' do
      visit <%= route_path %>_path
      expect(current_path).to eq(root_path)
      expect(page).to have_content('Доступ запрещён')
    end
  end
end