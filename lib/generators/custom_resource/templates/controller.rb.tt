class <%= controller_class_name %> < Web::ApplicationController
  before_action :find_and_authorize_<%= resource_name %>, except: %i[new create index]

  def index
    authorize <%= class_name %>

    @q = policy_scope(<%= class_name %>).default_order.ransack(params[:q])
    @<%= resource_name_plural %>_cnt = @q.result.count

    @pagy, @<%= resource_name_plural %> = pagy(@q.result)

    @main_title = '<%= resource_label_plural %>'
    set_<%= resource_name %>_breadcrumbs

    render_turbo_response('web/<%= files_path %>/index', breadcrumbs: true)
  end

  def show
    set_<%= resource_name %>_breadcrumbs({ title: @<%= resource_name %>.label,
                                    path: <%= route_path %>_path(@<%= resource_name %>) })

    render_turbo_response('web/<%= files_path %>/show', breadcrumbs: true)
  end

  def new
    authorize <%= class_name %>

    @<%= resource_name %> = <%= class_name %>.new

    set_<%= resource_name %>_breadcrumbs({ title: <%= new_resource_title.inspect %> })

    render_turbo_response('web/<%= files_path %>/new', breadcrumbs: true)
  end

  def edit
    set_<%= resource_name %>_breadcrumbs({ title: @<%= resource_name %>.label,
                                    path: <%= route_path %>_path(@<%= resource_name %>) })

    render_turbo_response('web/<%= files_path %>/edit', flash: true)
  end

  def create
    authorize <%= class_name %>

    @<%= resource_name %> = <%= class_name %>.new(<%= resource_name %>_params)
    @<%= resource_name %>.creator = current_user

    if @<%= resource_name %>.save
      flash.now[:notice] = <%= create_success_message.inspect %>
      set_<%= resource_name %>_breadcrumbs({ title: @<%= resource_name %>.label,
                                      path: <%= route_path %>_path(@<%= resource_name %>) })
      render_turbo_response('web/<%= files_path %>/show', breadcrumbs: true, flash: true)
    else
      set_<%= resource_name %>_breadcrumbs({ title: <%= new_resource_title.inspect %> })
      render_turbo_response('web/<%= files_path %>/new', breadcrumbs: true)
    end
  end

  def update
    if @<%= resource_name %>.update(<%= resource_name %>_params)
      flash.now[:notice] = <%= update_success_message.inspect %> if @<%= resource_name %>.saved_changes?

      render_turbo_response('web/<%= files_path %>/show', flash: true)
    else
      render_turbo_response('web/<%= files_path %>/edit')
    end
  end

  def destroy
    @<%= resource_name %>.discard
    flash.now[:notice] = <%= destroy_message.inspect %>

    render_turbo_response('web/<%= files_path %>/show', flash: true)
  end

  def restore
    @<%= resource_name %>.undiscard!
    flash.now[:notice] = <%= restore_message.inspect %>

    render_turbo_response('web/<%= files_path %>/show', flash: true)
  end

  def lock
    @<%= resource_name %>.lock_access!(send_instructions: false)
    flash.now[:notice] = <%= lock_message.inspect %>

    render_turbo_response('web/<%= files_path %>/show', flash: true)
  end

  def unlock
    @<%= resource_name %>.unlock_access!
    flash.now[:notice] = <%= unlock_message.inspect %>

    render_turbo_response('web/<%= files_path %>/show', flash: true)
  end

  private

  def find_and_authorize_<%= resource_name %>
    @<%= resource_name %> = <%= class_name %>.find(params[:id])
    authorize @<%= resource_name %>
  end

  def <%= resource_name %>_params
    attributes = %i[label]
    params.expect(<%= route_name %>: attributes)
  end

  def set_<%= resource_name %>_breadcrumbs(additional = nil)
    @breadcrumbs = [
      { title: '<%= resource_label_plural %>', path: <%= route_path %>_path }
    ]
    @breadcrumbs << additional if additional
  end
end